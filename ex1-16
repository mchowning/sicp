(define (expt-lin-fast b n)
  (define (even? num) 
    (= (remainder num 2)
       0))
  (define (square x) 
    (* x x))
  (define (expt-iter b counter product)
    (cond ((= counter 0) product)
          ((even? counter) (expt-iter (square b) 
                                      (/ counter 2)
                                      product))
          (else (expt-iter b
                           (- counter 1)
                           (* product b)))))
  (expt-iter b n 1))
