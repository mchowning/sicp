(define (cube x)
  (* x x x))

(define (square x)
  (* x x))

;; This is a generic good-enough? function
(define (good-enough? exp guess x)
  (< (abs (- (exp guess) x)) 0.001))

(define (improve-cube-guess guess x)
  (/ (+ (/ x 
           (square guess)) 
        (* 2 
           guess))
     3))

(define (average x y)
  (/ (+ x y)
     2))

(define (improve-square-guess guess x)
  (average guess 
           (/ x guess)))

;; requires a specific (not generic) good-enough? function
(define (cube-iter guess x)
  (if (good-enough? guess x)
    guess
    (cube-iter (improve guess x) x)))

(define (gen-iter exp improve guess x)
  (if (good-enough? exp guess x)
    guess
    (gen-iter exp improve (improve guess x) x)))
